{"version":3,"sources":["main.css","01-settings/_font-families.scss","02-tools/functions/_get-color.scss","02-tools/functions/_get-font-family.scss","02-tools/functions/_get-font-size.scss","02-tools/functions/_get-z-index.scss","02-tools/vendor/_sass-mq.scss","03-generic/_box-sizing.scss","04-elements/_anchor.scss","01-settings/_colors.scss","04-elements/_body.scss","04-elements/_headings.scss","05-objects/_site-container.scss","07-components/_home-page-visual.scss","07-components/_site-footer.scss","07-components/_site-header.scss","07-components/_site-navigation.scss","07-components/_testimonial.scss","08-trumps/_text.scss","08-trumps/_visibility.scss"],"names":[],"mappings":"AAAA,iBAAiB;ACAjB;EACC,qCAAoC;EACpC,8DAA6D;EAC7D,mBAAkB;EAClB,mBAAkB;EAClB,oBAAmB,EAAA;;ACLpB;gFAEgF;AAEhF;;GAEG;ACNH;gFAEgF;ACWhF;;GAEG;ACfH;gFAEgF;AAChF;;;GAGG;AAOH;;;;;;;;GAQG;ACrBH;gFAEgF;ACFhF;gFAEgF;AAEhF;;;GAGG;AACF;EACA,+BAAsB;UAAtB,uBAAsB,EACtB;;AAED;EAIE,4BAAmB;UAAnB,oBAAmB,EACnB;;ACjBF;EACC,YCIc;EDHd,sBAAqB,EACrB;;AEHD;EACC,YDOY;ECNZ,sCPE+B;EOD/B,UAAS,EACT;;ACJD;;;EAGC,WFWU;EEVV,gCRC8B;EQA9B,iBAAgB,EAChB;;AAED;;EAEC,gBAAe,EACf;;ACXD;EACC,kBAAiB;EACjB,mBAAkB;EAClB,iBAAgB,EAWhB;ENqNC;IMnOF;MAME,iBAAgB;MAChB,kBAAiB,EAOlB,EAAA;ENqNC;IMnOF;MAWE,kBAAiB;MACjB,mBAAkB,EAEnB,EAAA;;ACdD;EACC,0BAAmB;MAAnB,uBAAmB;UAAnB,oBAAmB;EACnB,qBAAa;EAAb,qBAAa;EAAb,cAAa;EACb,+BAAmB;EAAnB,8BAAmB;MAAnB,wBAAmB;UAAnB,oBAAmB;EACnB,yBAAuB;MAAvB,sBAAuB;UAAvB,wBAAuB;EACvB,YAAW,EAuBX;EArBA;IACC,iBAAgB;IAChB,kBAAiB,EACjB;EPyNA;IOnOF;MAcG,cAAa,EACb,EAAA;EPoND;IOnOF;MAmBE,YAAW,EASZ,EAAA;EPuMC;IO5MA;MACC,iBAAgB;MAChB,kBAAiB,EACjB,EAAA;;AC1BH;EACC,sBAAqB;EACrB,gBVEc;EUDd,oBAAmB;EACnB,kBAAiB;EACjB,kBAAiB;EACjB,mBAAkB,EAClB;;ACPD;EACC,uBNOY;EMNZ,kDAAiD;EACjD,uCAAsC;EACtC,6BAA4B;EAC5B,aAAY;EACZ,mBAAkB,EA4ClB;EA1CA;IACC,WNKS;IMJT,+CZH+C;IYI/C,gBXHW;IWIX,iBAAgB;IAChB,UAAS;IACT,mBAAkB,EAElB;ETmNA;IShNA;MACC,eAAc,EACd,EAAA;ET8MD;ISnOF;MAyBE,sFAAqF;MACrF,uDAAsD;MACtD,WAAU,EAuBX;MArBC;QACC,gBXtBU;QWuBV,oBAAmB;QACnB,iBAAgB,EAChB,EAAA;ETkMD;IS9LA;MACC,gBX/BY;MWgCZ,qBAAoB;MACpB,kBAAiB,EACjB,EAAA;ET0LD;IStLA;MACC,qBAAoB;MACpB,kBAAiB,EACjB,EAAA;;AChDH;EACC,0BPCc;EOAd,8BPMY;EOLZ,sBAAqB,EA0BrB;EAxBA;IACC,qBAAa;IAAb,qBAAa;IAAb,cAAa;IACb,iBAAgB;IAChB,UAAS;IACT,WAAU,EACV;EAED;IAEE,iBAAgB,EAChB;EAGF;IACC,YPXW;IOYX,sBAAqB;IACrB,gBZlBW;IYmBX,uBAAsB;IACtB,oBAAmB,EAKnB;IAVD;MAQE,yBAAwB,EACxB;;AC3BH;EACC,UAAS;EACT,cAAa;EAGb;6EAE4E;EAS5E;6EAE4E;EAoB5E;6EAE4E,EAsB5E;EAtDA;IACC,gBbLa,EaUb;IAND;MAIE,cAAa,EACb;EXsND;IW/MA;MACC,+BRXU;MQYV,mBAAkB,EAClB;IAvBH;MA2BI,2BRjBS;MQkBT,YAAW;MACX,eAAc;MACd,mBAAkB;MAClB,iBAAgB;MAChB,WAAU,EACV,EAAA;EXkMF;IWnOF;MA0CE,8BRhCW;MQiCX,+CAAmC;cAAnC,uCAAmC;MACnC,iBAAgB;MAChB,mBAAkB,EAiBnB;MA9DD;QAgDG,gBAAe,EACf;MAjDH;QAoDG,YRzCQ;QQ0CR,aAAS;QACT,eAAc;QACd,6DdjDiD;QckDjD,cAAa;QACb,mBAAkB;QAClB,mBAAkB;QAClB,cAAa,EACb,EAAA;;AC5DH;EACC,mBAAkB,EAClB;;AlB+MD;EmBhNC,cAAa,EACb","file":"main.css","sourcesContent":["@charset \"UTF-8\";\n@font-face {\n  font-family: 'sf_shai_fontairegular';\n  src: url(../fonts/SF_Shai_Fontai-webfont.woff) format(\"woff\");\n  font-display: swap;\n  font-style: normal;\n  font-weight: normal; }\n\n/* ========================================================================== *\t#GET COLOR FUNCTION\r\n\\* ========================================================================== */\n/**\r\n * function for retreiving colors from the mapping\r\n */\n/* ========================================================================== *\t#GET FONT FAMILY FUNCTION\r\n\\* ========================================================================== */\n/**\r\n * function for retreiving colors from the mapping\r\n */\n/* ========================================================================== *\t#Z-INDEX\r\n\\* ========================================================================== */\n/**\r\n * A map with all the classes which have a z-index. Add new classes to the map\r\n * when needed.\r\n */\n/**\r\n * This function will return a z-index based on the position of the element in\r\n * the z-index map.\r\n *\r\n * @param {String} $element The name of the element which needs a z-index. When\r\n *        no element is specified the method will take the current scope.\r\n *\r\n * @returns {String} The index of the element in the z-index map.\r\n */\n/* ========================================================================== *    #MEDIAQUERY\r\n\\* ========================================================================== */\n/* ========================================================================== *\t#BOX-SIZING\r\n\\* ========================================================================== */\n/**\r\n * More sensible default box-sizing:\r\n * http://css-tricks.com/inheriting-box-sizing-probably-slightly-better-best-practice\r\n */\nhtml {\n  box-sizing: border-box; }\n\n*, *:after, *:before {\n  box-sizing: inherit; }\n\na {\n  color: #00e;\n  text-decoration: none; }\n\nbody {\n  color: #000;\n  font: normal 16px Verdana, sans-serif;\n  margin: 0; }\n\nh1,\nh2,\nh3 {\n  color: red;\n  font-family: Tahoma, sans-serif;\n  font-weight: 900; }\n\nh2,\nh3 {\n  margin-top: 2em; }\n\n.o-siteContainer {\n  margin-left: .5em;\n  margin-right: .5em;\n  max-width: 980px; }\n  @media (min-width: 48em) {\n    .o-siteContainer {\n      margin-left: 1em;\n      margin-right: 1em; } }\n  @media (min-width: 64em) {\n    .o-siteContainer {\n      margin-left: auto;\n      margin-right: auto; } }\n\n.c-homePageVisual {\n  align-items: center;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  margin: 1em; }\n  .c-homePageVisual__mainImage {\n    margin-left: 1em;\n    margin-right: 1em; }\n  @media (max-width: 47.99em) {\n    .c-homePageVisual .-hideUntilTablet {\n      display: none; } }\n  @media (min-width: 48em) {\n    .c-homePageVisual {\n      margin: 2em; } }\n  @media (min-width: 64em) {\n    .c-homePageVisual__mainImage {\n      margin-left: 2em;\n      margin-right: 2em; } }\n\n.c-siteFooter {\n  border-top: 1px solid;\n  font-size: 12px;\n  margin-bottom: .5em;\n  margin-top: 2.5em;\n  padding-top: .5em;\n  text-align: center; }\n\n.c-siteHeader {\n  background-color: #000;\n  background-image: url(/assets/images/fighter.png);\n  background-position: center right -2em;\n  background-repeat: no-repeat;\n  padding: 1em;\n  position: relative; }\n  .c-siteHeader__title {\n    color: red;\n    font-family: sf_shai_fontairegular, sans-serif;\n    font-size: 36px;\n    font-weight: 900;\n    margin: 0;\n    text-align: center; }\n  @media (max-width: 47.99em) {\n    .c-siteHeader__schoolName {\n      display: block; } }\n  @media (min-width: 48em) {\n    .c-siteHeader {\n      background-image: url(/assets/images/logo_small.gif), url(/assets/images/fighter.png);\n      background-position: center left 1em, center right 1em;\n      padding: 0; }\n      .c-siteHeader__title {\n        font-size: 36px;\n        padding-bottom: 1em;\n        padding-top: 1em; } }\n  @media (min-width: 64em) {\n    .c-siteHeader__title {\n      font-size: 52px;\n      padding-bottom: .5em;\n      padding-top: .5em; } }\n  @media (min-width: 90em) {\n    .c-siteHeader__title {\n      padding-bottom: .7em;\n      padding-top: .7em; } }\n\n.c-siteNavigation {\n  background-color: #eee8aa;\n  border-bottom: 1px solid #000;\n  margin-bottom: 1.25em; }\n  .c-siteNavigation__items {\n    display: flex;\n    list-style: none;\n    margin: 0;\n    padding: 0; }\n  .c-siteNavigation__item + .c-siteNavigation__item {\n    margin-left: 1em; }\n  .c-siteNavigation__link {\n    color: #000;\n    display: inline-block;\n    font-size: 14px;\n    padding-bottom: 1.25em;\n    padding-top: 1.25em; }\n    .c-siteNavigation__link.-isActive {\n      border-bottom: 5px solid; }\n\n.c-testimonial {\n  margin: 0;\n  padding: .8em;\n  /* ====================================================================== *\t   ELEMENTS\r\n\t\\* ====================================================================== */\n  /* ====================================================================== *\t   MEDIA QUERY: MOBILE ONLY\r\n\t\\* ====================================================================== */\n  /* ====================================================================== *\t   MEDIA QUERY: FROM TABLET\r\n\t\\* ====================================================================== */ }\n  .c-testimonial__source {\n    font-size: 12px; }\n    .c-testimonial__source:before {\n      content: '- '; }\n  @media (max-width: 47.99em) {\n    .c-testimonial__content {\n      border-left: 0.25em solid #ddd;\n      padding-left: .5em; }\n    .c-testimonial + .c-testimonial:before {\n      border-top: 1px solid #ddd;\n      content: '';\n      display: block;\n      margin-bottom: 2em;\n      margin-left: 10%;\n      width: 80%; } }\n  @media (min-width: 48em) {\n    .c-testimonial {\n      border-left: 0.5em solid #ddd;\n      box-shadow: 0 0 6px rgba(0, 0, 0, 0.5);\n      margin-left: 4em;\n      position: relative; }\n      .c-testimonial + .c-testimonial {\n        margin-top: 2em; }\n      .c-testimonial::before {\n        color: #999;\n        content: \"â€œ\";\n        display: block;\n        font: italic 4em/1 Cochin, Georgia, \"Times New Roman\", serif;\n        left: -1.25em;\n        position: absolute;\n        text-align: center;\n        width: 1.25em; } }\n\n.u-text-center {\n  text-align: center; }\n\n[hidden] {\n  display: none; }\n","@font-face {\r\n\tfont-family: 'sf_shai_fontairegular';\r\n\tsrc: url(../fonts/SF_Shai_Fontai-webfont.woff) format('woff');\r\n\tfont-display: swap;\r\n\tfont-style: normal;\r\n\tfont-weight: normal;\r\n}\r\n","/* ========================================================================== *\\\r\n\t#GET COLOR FUNCTION\r\n\\* ========================================================================== */\r\n\r\n/**\r\n * function for retreiving colors from the mapping\r\n */\r\n @function get-color($color, $tone: 'base') {\r\n\t@return map-get(map-get($colors, $color), $tone);\r\n}\r\n","/* ========================================================================== *\\\r\n\t#GET FONT FAMILY FUNCTION\r\n\\* ========================================================================== */\r\n$families: (\r\n\t\"default\": (Verdana, sans-serif),\r\n\t\"heading\": (Tahoma, sans-serif),\r\n\t\"quote\": (Cochin, Georgia, \"Times New Roman\", serif),\r\n\t\"siteHeader\": (sf_shai_fontairegular, sans-serif)\r\n);\r\n\r\n@function get-font-family($family: 'default') {\r\n\t$family: map-get($families, $family);\r\n\r\n\t@if $family {\r\n\t\t@return $family;\r\n\t}\r\n\r\n\t@warn 'There is no font family for \"#{$family}\" in this list; choose one of: #{$families}';\r\n\t@return null;\r\n}\r\n","$font-sizes: (\r\n\tbody: (\r\n\t\tbase: 16px,\r\n\t\tsmall: 14px,\r\n\t\tsmaller: 12px\r\n\t),\r\n\theading: (\r\n\t\tlargest: 52px,\r\n\t\tlarge: 36px,\r\n\t\tmedium: 20px,\r\n\t)\r\n\r\n);\r\n/**\r\n * function for retreiving colors from the mapping\r\n */\r\n @function get-font-size($purpose: 'body', $size: 'base') {\r\n\t@if map-has-key($font-sizes, $purpose) {\r\n\t\t$sizes: map-get($font-sizes, $purpose);\r\n\t\t@if map-has-key($map: $sizes, $key: $size) {\r\n\t\t\t@return map-get($map: $sizes, $key: $size);\r\n\t\t} @else {\r\n\t\t\t@error 'There is no size named \"#{$size}\" for the purpose #{$purpose}.';\r\n\t\t}\r\n\t} @else {\r\n\t\t@error 'There is no purpose named \"#{$purpose}\" defined in the $font-sizes map.';\r\n\t}\r\n\r\n}\r\n","/* ========================================================================== *\\\r\n\t#Z-INDEX\r\n\\* ========================================================================== */\r\n/**\r\n * A map with all the classes which have a z-index. Add new classes to the map\r\n * when needed.\r\n */\r\n$z-index-order: (\r\n\t/* Bottom element, lowest z-index */\r\n\r\n\t/* Top elements, highest z-index */\r\n);\r\n\r\n/**\r\n * This function will return a z-index based on the position of the element in\r\n * the z-index map.\r\n *\r\n * @param {String} $element The name of the element which needs a z-index. When\r\n *        no element is specified the method will take the current scope.\r\n *\r\n * @returns {String} The index of the element in the z-index map.\r\n */\r\n@function get-z-index($element: '') {\r\n\t@if($element == '') {\r\n\t\t$element: #{&};\r\n\t}\r\n\r\n\t$z-index: index($z-index-order, $element);\r\n\r\n\t@if $z-index {\r\n\t\t@return $z-index;\r\n\t}\r\n\r\n\t@warn 'There is no item \"#{$element}\" in this list; choose one of: #{$z-index-order}';\r\n\t@return null;\r\n}\r\n","/* ========================================================================== *\\\r\n    #MEDIAQUERY\r\n\\* ========================================================================== */\r\n@charset \"UTF-8\"; // Fixes an issue where Ruby locale is not set properly\r\n\t\t\t\t  // See https://github.com/sass-mq/sass-mq/pull/10\r\n\r\n/// Base font size on the `<body>` element\r\n/// @type Number (unit)\r\n$mq-base-font-size: 16px !default;\r\n\r\n/// Responsive mode\r\n///\r\n/// Set to `false` to enable support for browsers that do not support @media queries,\r\n/// (IE <= 8, Firefox <= 3, Opera <= 9)\r\n///\r\n/// You could create a stylesheet served exclusively to older browsers,\r\n/// where @media queries are rasterized\r\n///\r\n/// @example scss\r\n///  // old-ie.scss\r\n///  $mq-responsive: false;\r\n///  @import 'main'; // @media queries in this file will be rasterized up to $mq-static-breakpoint\r\n///                   // larger breakpoints will be ignored\r\n///\r\n/// @type Boolean\r\n/// @link https://github.com/sass-mq/sass-mq#responsive-mode-off Disabled responsive mode documentation\r\n$mq-responsive: true !default;\r\n\r\n/// Breakpoint list\r\n///\r\n/// Name your breakpoints in a way that creates a ubiquitous language\r\n/// across team members. It will improve communication between\r\n/// stakeholders, designers, developers, and testers.\r\n///\r\n/// @type Map\r\n/// @link https://github.com/sass-mq/sass-mq#seeing-the-currently-active-breakpoint Full documentation and examples\r\n$mq-breakpoints: (\r\n\tmobile:  320px,\r\n\ttablet:  740px,\r\n\tdesktop: 980px,\r\n\twide:    1300px\r\n) !default;\r\n\r\n/// Static breakpoint (for fixed-width layouts)\r\n///\r\n/// Define the breakpoint from $mq-breakpoints that should\r\n/// be used as the target width for the fixed-width layout\r\n/// (i.e. when $mq-responsive is set to 'false') in a old-ie.scss\r\n///\r\n/// @example scss\r\n///  // tablet-only.scss\r\n///  //\r\n///  // Ignore all styles above tablet breakpoint,\r\n///  // and fix the styles (e.g. layout) at tablet width\r\n///  $mq-responsive: false;\r\n///  $mq-static-breakpoint: tablet;\r\n///  @import 'main'; // @media queries in this file will be rasterized up to tablet\r\n///                   // larger breakpoints will be ignored\r\n///\r\n/// @type String\r\n/// @link https://github.com/sass-mq/sass-mq#adding-custom-breakpoints Full documentation and examples\r\n$mq-static-breakpoint: desktop !default;\r\n\r\n/// Show breakpoints in the top right corner\r\n///\r\n/// If you want to display the currently active breakpoint in the top\r\n/// right corner of your site during development, add the breakpoints\r\n/// to this list, ordered by width, e.g. (mobile, tablet, desktop).\r\n///\r\n/// @type map\r\n$mq-show-breakpoints: () !default;\r\n\r\n/// Customize the media type (e.g. `@media screen` or `@media print`)\r\n/// By default sass-mq uses an \"all\" media type (`@media all and â€¦`)\r\n///\r\n/// @type String\r\n/// @link https://github.com/sass-mq/sass-mq#changing-media-type Full documentation and examples\r\n$mq-media-type: all !default;\r\n\r\n/// Convert pixels to ems\r\n///\r\n/// @param {Number} $px - value to convert\r\n/// @param {Number} $base-font-size ($mq-base-font-size) - `<body>` font size\r\n///\r\n/// @example scss\r\n///  $font-size-in-ems: mq-px2em(16px);\r\n///  p { font-size: mq-px2em(16px); }\r\n///\r\n/// @requires $mq-base-font-size\r\n/// @returns {Number}\r\n@function mq-px2em($px, $base-font-size: $mq-base-font-size) {\r\n\t@if unitless($px) {\r\n\t\t@warn \"Assuming #{$px} to be in pixels, attempting to convert it into pixels.\";\r\n\t\t@return mq-px2em($px * 1px, $base-font-size);\r\n\t} @else if unit($px) == em {\r\n\t\t@return $px;\r\n\t}\r\n\t@return ($px / $base-font-size) * 1em;\r\n}\r\n\r\n/// Get a breakpoint's width\r\n///\r\n/// @param {String} $name - Name of the breakpoint. One of $mq-breakpoints\r\n///\r\n/// @example scss\r\n///  $tablet-width: mq-get-breakpoint-width(tablet);\r\n///  @media (min-width: mq-get-breakpoint-width(desktop)) {}\r\n///\r\n/// @requires {Variable} $mq-breakpoints\r\n///\r\n/// @returns {Number} Value in pixels\r\n@function mq-get-breakpoint-width($name, $breakpoints: $mq-breakpoints) {\r\n\t@if map-has-key($breakpoints, $name) {\r\n\t\t@return map-get($breakpoints, $name);\r\n\t} @else {\r\n\t\t@warn \"Breakpoint #{$name} wasn't found in $breakpoints.\";\r\n\t}\r\n}\r\n\r\n/// Media Query mixin\r\n///\r\n/// @param {String | Boolean} $from (false) - One of $mq-breakpoints\r\n/// @param {String | Boolean} $until (false) - One of $mq-breakpoints\r\n/// @param {String | Boolean} $and (false) - Additional media query parameters\r\n/// @param {String} $media-type ($mq-media-type) - Media type: screen, printâ€¦\r\n///\r\n/// @ignore Undocumented API, for advanced use only:\r\n/// @ignore @param {Map} $breakpoints ($mq-breakpoints)\r\n/// @ignore @param {String} $static-breakpoint ($mq-static-breakpoint)\r\n///\r\n/// @content styling rules, wrapped into a @media query when $responsive is true\r\n///\r\n/// @requires {Variable} $mq-media-type\r\n/// @requires {Variable} $mq-breakpoints\r\n/// @requires {Variable} $mq-static-breakpoint\r\n/// @requires {function} mq-px2em\r\n/// @requires {function} mq-get-breakpoint-width\r\n///\r\n/// @link https://github.com/sass-mq/sass-mq#responsive-mode-on-default Full documentation and examples\r\n///\r\n/// @example scss\r\n///  .element {\r\n///    @include mq($from: mobile) {\r\n///      color: red;\r\n///    }\r\n///    @include mq($until: tablet) {\r\n///      color: blue;\r\n///    }\r\n///    @include mq(mobile, tablet) {\r\n///      color: green;\r\n///    }\r\n///    @include mq($from: tablet, $and: '(orientation: landscape)') {\r\n///      color: teal;\r\n///    }\r\n///    @include mq(950px) {\r\n///      color: hotpink;\r\n///    }\r\n///    @include mq(tablet, $media-type: screen) {\r\n///      color: hotpink;\r\n///    }\r\n///    // Advanced use:\r\n///    $my-breakpoints: (L: 900px, XL: 1200px);\r\n///    @include mq(L, $breakpoints: $my-breakpoints, $static-breakpoint: L) {\r\n///      color: hotpink;\r\n///    }\r\n///  }\r\n@mixin mq(\r\n\t$from: false,\r\n\t$until: false,\r\n\t$and: false,\r\n\t$media-type: $mq-media-type,\r\n\t$breakpoints: $mq-breakpoints,\r\n\t$responsive: $mq-responsive,\r\n\t$static-breakpoint: $mq-static-breakpoint\r\n) {\r\n\t$min-width: 0;\r\n\t$max-width: 0;\r\n\t$media-query: '';\r\n\r\n\t// From: this breakpoint (inclusive)\r\n\t@if $from {\r\n\t\t@if type-of($from) == number {\r\n\t\t\t$min-width: mq-px2em($from);\r\n\t\t} @else {\r\n\t\t\t$min-width: mq-px2em(mq-get-breakpoint-width($from, $breakpoints));\r\n\t\t}\r\n\t}\r\n\r\n\t// Until: that breakpoint (exclusive)\r\n\t@if $until {\r\n\t\t@if type-of($until) == number {\r\n\t\t\t$max-width: mq-px2em($until);\r\n\t\t} @else {\r\n\t\t\t$max-width: mq-px2em(mq-get-breakpoint-width($until, $breakpoints)) - .01em;\r\n\t\t}\r\n\t}\r\n\r\n\t// Responsive support is disabled, rasterize the output outside @media blocks\r\n\t// The browser will rely on the cascade itself.\r\n\t@if $responsive == false {\r\n\t\t$static-breakpoint-width: mq-get-breakpoint-width($static-breakpoint, $breakpoints);\r\n\t\t$target-width: mq-px2em($static-breakpoint-width);\r\n\r\n\t\t// Output only rules that start at or span our target width\r\n\t\t@if (\r\n\t\t\t$and == false\r\n\t\t\tand $min-width <= $target-width\r\n\t\t\tand (\r\n\t\t\t\t$until == false or $max-width >= $target-width\r\n\t\t\t)\r\n\t\t) {\r\n\t\t\t@content;\r\n\t\t}\r\n\t}\r\n\r\n\t// Responsive support is enabled, output rules inside @media queries\r\n\t@else {\r\n\t\t@if $min-width != 0 { $media-query: '#{$media-query} and (min-width: #{$min-width})'; }\r\n\t\t@if $max-width != 0 { $media-query: '#{$media-query} and (max-width: #{$max-width})'; }\r\n\t\t@if $and            { $media-query: '#{$media-query} and #{$and}'; }\r\n\r\n\t\t// Remove unnecessary media query prefix 'all and '\r\n\t\t@if ($media-type == 'all' and $media-query != '') {\r\n\t\t\t$media-type: '';\r\n\t\t\t$media-query: str-slice(unquote($media-query), 6);\r\n\t\t}\r\n\r\n\t\t@media #{$media-type + $media-query} {\r\n\t\t\t@content;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/// Add a breakpoint\r\n///\r\n/// @param {String} $name - Name of the breakpoint\r\n/// @param {Number} $width - Width of the breakpoint\r\n///\r\n/// @requires {Variable} $mq-breakpoints\r\n///\r\n/// @example scss\r\n///  @include mq-add-breakpoint(tvscreen, 1920px);\r\n///  @include mq(tvscreen) {}\r\n@mixin mq-add-breakpoint($name, $width) {\r\n\t$new-breakpoint: ($name: $width);\r\n\t$mq-breakpoints: map-merge($mq-breakpoints, $new-breakpoint) !global;\r\n}\r\n\r\n/// Show the active breakpoint in the top right corner of the viewport\r\n/// @link https://github.com/sass-mq/sass-mq#seeing-the-currently-active-breakpoint\r\n///\r\n/// @param {List} $show-breakpoints ($mq-show-breakpoints) - List of breakpoints to show in the top right corner\r\n/// @param {Map} $breakpoints ($mq-breakpoints) - Breakpoint names and sizes\r\n///\r\n/// @requires {Variable} $mq-breakpoints\r\n/// @requires {Variable} $mq-show-breakpoints\r\n///\r\n/// @example scss\r\n///  // Show breakpoints using global settings\r\n///  @include mq-show-breakpoints;\r\n///\r\n///  // Show breakpoints using custom settings\r\n///  @include mq-show-breakpoints((L, XL), (S: 300px, L: 800px, XL: 1200px));\r\n@mixin mq-show-breakpoints($show-breakpoints: $mq-show-breakpoints, $breakpoints: $mq-breakpoints) {\r\n\tbody:before {\r\n\t\tbackground-color: #FCF8E3;\r\n\t\tborder-bottom: 1px solid #FBEED5;\r\n\t\tborder-left: 1px solid #FBEED5;\r\n\t\tcolor: #C09853;\r\n\t\tfont: small-caption;\r\n\t\tpadding: 3px 6px;\r\n\t\tpointer-events: none;\r\n\t\tposition: fixed;\r\n\t\ttop: 0;\r\n\t\tz-index: 100;\r\n\r\n\t\t// Loop through the breakpoints that should be shown\r\n\t\t@each $show-breakpoint in $show-breakpoints {\r\n\t\t\t$width: mq-get-breakpoint-width($show-breakpoint, $breakpoints);\r\n\t\t\t@include mq($show-breakpoint, $breakpoints: $breakpoints) {\r\n\t\t\t\tcontent: \"#{$show-breakpoint} â‰¥ #{$width} (#{mq-px2em($width)})\";\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n@if length($mq-show-breakpoints) > 0 {\r\n\t@include mq-show-breakpoints;\r\n}\r\n","/* ========================================================================== *\\\r\n\t#BOX-SIZING\r\n\\* ========================================================================== */\r\n\r\n/**\r\n * More sensible default box-sizing:\r\n * http://css-tricks.com/inheriting-box-sizing-probably-slightly-better-best-practice\r\n */\r\n html {\r\n\tbox-sizing: border-box;\r\n}\r\n\r\n* {\r\n\t&,\r\n\t&:after,\r\n\t&:before {\r\n\t\tbox-sizing: inherit;\r\n\t}\r\n}\r\n","a {\r\n\tcolor: get-color(interaction, neutral);\r\n\ttext-decoration: none;\r\n}\r\n","$colors: (\r\n\tyellow: (\r\n\t\tbase: #eee8aa\r\n\t),\r\n\tinteraction: (\r\n\t\tneutral: #00e\r\n\t),\r\n\tgreyscale: (\r\n\t\tblack: #000,\r\n\t\twhite: #fff,\r\n\t\tlight: #ddd,\r\n\t\tmid: #999\r\n\t),\r\n\theading: (\r\n\t\tbase: red\r\n\t)\r\n);\r\n","body {\r\n\tcolor: get-color(greyscale, black);\r\n\tfont: normal get-font-size() get-font-family();\r\n\tmargin: 0;\r\n}\r\n","h1,\r\nh2,\r\nh3 {\r\n\tcolor: get-color('heading');\r\n\tfont-family: get-font-family('heading');\r\n\tfont-weight: 900;\r\n}\r\n\r\nh2,\r\nh3 {\r\n\tmargin-top: 2em;\r\n}\r\n",".o-siteContainer {\r\n\tmargin-left: .5em;\r\n\tmargin-right: .5em;\r\n\tmax-width: 980px;\r\n\r\n\t@include mq($from: tablet) {\r\n\t\tmargin-left: 1em;\r\n\t\tmargin-right: 1em;\r\n\t}\r\n\r\n\t@include mq($from: desktop) {\r\n\t\tmargin-left: auto;\r\n\t\tmargin-right: auto;\r\n\t}\r\n}\r\n",".c-homePageVisual {\r\n\talign-items: center;\r\n\tdisplay: flex;\r\n\tflex-direction: row;\r\n\tjustify-content: center;\r\n\tmargin: 1em;\r\n\r\n\t&__mainImage {\r\n\t\tmargin-left: 1em;\r\n\t\tmargin-right: 1em;\r\n\t}\r\n\r\n\t@include mq($until: tablet) {\r\n\t\t.-hideUntilTablet {\r\n\t\t\tdisplay: none;\r\n\t\t}\r\n\t}\r\n\r\n\t@include mq($from: tablet) {\r\n\t\tmargin: 2em;\r\n\t}\r\n\r\n\t@include mq($from: desktop) {\r\n\t\t&__mainImage {\r\n\t\t\tmargin-left: 2em;\r\n\t\t\tmargin-right: 2em;\r\n\t\t}\r\n\t}\r\n}\r\n",".c-siteFooter {\r\n\tborder-top: 1px solid;\r\n\tfont-size: get-font-size('body', 'smaller');\r\n\tmargin-bottom: .5em;\r\n\tmargin-top: 2.5em;\r\n\tpadding-top: .5em;\r\n\ttext-align: center;\r\n}\r\n",".c-siteHeader {\r\n\tbackground-color: get-color(greyscale, black);\r\n\tbackground-image: url(/assets/images/fighter.png);\r\n\tbackground-position: center right -2em;\r\n\tbackground-repeat: no-repeat;\r\n\tpadding: 1em;\r\n\tposition: relative;\r\n\r\n\t&__title {\r\n\t\tcolor: get-color(heading);\r\n\t\tfont-family: get-font-family(siteHeader);\r\n\t\tfont-size: get-font-size(heading, large);\r\n\t\tfont-weight: 900;\r\n\t\tmargin: 0;\r\n\t\ttext-align: center;\r\n\t\t// text-shadow: 0 0 2px get-color(greyscale, light);\r\n\t}\r\n\r\n\t@include mq($until: tablet) {\r\n\t\t&__schoolName {\r\n\t\t\tdisplay: block;\r\n\t\t}\r\n\t}\r\n\r\n\t@include mq($from: tablet) {\r\n\t\tbackground-image: url(/assets/images/logo_small.gif), url(/assets/images/fighter.png);\r\n\t\tbackground-position: center left 1em, center right 1em;\r\n\t\tpadding: 0;\r\n\r\n\t\t&__title {\r\n\t\t\tfont-size: get-font-size(heading, large);\r\n\t\t\tpadding-bottom: 1em;\r\n\t\t\tpadding-top: 1em;\r\n\t\t}\r\n\t}\r\n\r\n\t@include mq($from: desktop) {\r\n\t\t&__title {\r\n\t\t\tfont-size: get-font-size(heading, largest);\r\n\t\t\tpadding-bottom: .5em;\r\n\t\t\tpadding-top: .5em;\r\n\t\t}\r\n\t}\r\n\r\n\t@include mq($from: wide) {\r\n\t\t&__title {\r\n\t\t\tpadding-bottom: .7em;\r\n\t\t\tpadding-top: .7em;\r\n\t\t}\r\n\t}\r\n}\r\n",".c-siteNavigation {\r\n\tbackground-color: get-color(yellow);\r\n\tborder-bottom: 1px solid get-color(greyscale, black);\r\n\tmargin-bottom: 1.25em;\r\n\r\n\t&__items {\r\n\t\tdisplay: flex;\r\n\t\tlist-style: none;\r\n\t\tmargin: 0;\r\n\t\tpadding: 0;\r\n\t}\r\n\r\n\t&__item {\r\n\t\t& + & {\r\n\t\t\tmargin-left: 1em;\r\n\t\t}\r\n\t}\r\n\r\n\t&__link {\r\n\t\tcolor: get-color(greyscale, black);\r\n\t\tdisplay: inline-block;\r\n\t\tfont-size: get-font-size(body, small);\r\n\t\tpadding-bottom: 1.25em;\r\n\t\tpadding-top: 1.25em;\r\n\r\n\t\t&.-isActive {\r\n\t\t\tborder-bottom: 5px solid;\r\n\t\t}\r\n\t}\r\n}\r\n",".c-testimonial {\r\n\tmargin: 0;\r\n\tpadding: .8em;\r\n\r\n\r\n\t/* ====================================================================== *\\\r\n\t   ELEMENTS\r\n\t\\* ====================================================================== */\r\n\t&__source {\r\n\t\tfont-size: get-font-size('body', 'smaller');\r\n\r\n\t\t&:before {\r\n\t\t\tcontent: '- ';\r\n\t\t}\r\n\t}\r\n\r\n\t/* ====================================================================== *\\\r\n\t   MEDIA QUERY: MOBILE ONLY\r\n\t\\* ====================================================================== */\r\n\t@include mq($until: tablet) {\r\n\t\t&__content {\r\n\t\t\tborder-left: .25em solid get-color(greyscale, light);\r\n\t\t\tpadding-left: .5em;\r\n\t\t}\r\n\r\n\t\t& + & {\r\n\t\t\t&:before {\r\n\t\t\t\tborder-top: 1px solid get-color(greyscale, light);\r\n\t\t\t\tcontent: '';\r\n\t\t\t\tdisplay: block;\r\n\t\t\t\tmargin-bottom: 2em;\r\n\t\t\t\tmargin-left: 10%;\r\n\t\t\t\twidth: 80%;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/* ====================================================================== *\\\r\n\t   MEDIA QUERY: FROM TABLET\r\n\t\\* ====================================================================== */\r\n\t@include mq($from: tablet) {\r\n\t\tborder-left: .5em solid get-color(greyscale, light);\r\n\t\tbox-shadow: 0 0 6px rgba(0,0,0,0.5);\r\n\t\tmargin-left: 4em;\r\n\t\tposition: relative;\r\n\r\n\t\t& + & {\r\n\t\t\tmargin-top: 2em;\r\n\t\t}\r\n\r\n\t\t&::before {\r\n\t\t\tcolor: get-color(greyscale, mid);\r\n\t\t\tcontent: \"â€œ\";\r\n\t\t\tdisplay: block;\r\n\t\t\tfont: italic 4em/1 get-font-family('quote');\r\n\t\t\tleft: -1.25em;\r\n\t\t\tposition: absolute;\r\n\t\t\ttext-align: center;\r\n\t\t\twidth: 1.25em;\r\n\t\t}\r\n\t}\r\n}\r\n",".u-text-center {\r\n\ttext-align: center;\r\n}\r\n","[hidden] {\r\n\tdisplay: none;\r\n}\r\n"]}